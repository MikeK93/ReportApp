<div id="create-record-dialog" class="modal fade" role="dialog">
    <div class="modal-dialog" style="max-width: 500px;">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title record-for-date-message">Create new record for <span></span></h4>
            </div>

            <div class="modal-body">
                <div class="validation-tips">
                    <p class="dialog-validate-tip">All form fields are required.</p>
                    <p id="title-validation-message" class="dialog-validate-tip" style="display: none;">Title must be numeric, contains unrerscore, dash, space and maximum length is 50 charecters.</p>
                    <p id="description-validation-message" class="dialog-validate-tip" style="display: none;">Title must be numeric, contains unrerscore, dash, exclamation sign, question mark, comma, period, space and maximum length is 400 charecters.</p>
                    <p id="money-spent-validation-message" class="dialog-validate-tip" style="display: none;">Money spent should be numeric only.</p>
                </div>
                <div class="container">
                    <div class="row">
                        <div class="col-md-6"><label>Title: </label></div>
                        <div class="col-md-6"><input id="title" type="text" class="form-control" /></div>
                        @* TODO: add space between 'rows' *@
                        <div class="col-md-6"><label>Money spent: </label></div>
                        <div class="col-md-6"><input id="money-spent" type="text" class="form-control" /></div>
                        @* TODO: add space between 'rows' *@
                        <div class="col-md-6"><label>Description: </label></div>
                        <div class="col-md-6"><input id="description" type="text" class="form-control" /></div>
                        @* TODO: add space between 'rows' *@
                        <div class="col-md-6"><label>Tags: </label></div>
                        <div class="col-md-6">
                            <select class="tags form-control">
                                <option value="3620194" selected="selected">select2/select2</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn-save btn btn-default">Ok</button>
                <button type="button" class="btn-dismiss btn btn-default">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    // TODO: tweak select2
    function formatRepo(repo) {
        if (repo.loading) return repo.text;

        var markup = "<div class='select2-result-repository clearfix'>" +
          "<div class='select2-result-repository__avatar'><img src='" + repo.owner.avatar_url + "' /></div>" +
          "<div class='select2-result-repository__meta'>" +
            "<div class='select2-result-repository__title'>" + repo.full_name + "</div>";

        if (repo.description) {
            markup += "<div class='select2-result-repository__description'>" + repo.description + "</div>";
        }

        markup += "<div class='select2-result-repository__statistics'>" +
          "<div class='select2-result-repository__forks'><i class='fa fa-flash'></i> " + repo.forks_count + " Forks</div>" +
          "<div class='select2-result-repository__stargazers'><i class='fa fa-star'></i> " + repo.stargazers_count + " Stars</div>" +
          "<div class='select2-result-repository__watchers'><i class='fa fa-eye'></i> " + repo.watchers_count + " Watchers</div>" +
        "</div>" +
        "</div></div>";

        return markup;
    }

    function formatRepoSelection(repo) {
        return repo.full_name || repo.text;
    }

    $('.tags').select2({
        ajax: {
            url: 'report/api/tags',
            dataType: 'json',
            delay: 150,
            cache: false,
            data: function (params) {
                return {
                    q: params.term, // search term
                    page: params.page
                };
            },
            processResults: function (data, params) {
                // parse the results into the format expected by Select2
                // since we are using custom formatting functions we do not need to
                // alter the remote JSON data, except to indicate that infinite
                // scrolling can be used
                params.page = params.page || 1;

                return {
                    results: data.items,
                    pagination: {
                        more: (params.page * 30) < data.total_count
                    }
                };
            }
        },
        escapeMarkup: function (markup) { return markup; },
        minimumInputLength: 1,
        templateResult: formatRepo, // omitted for brevity, see the source of this page
        templateSelection: formatRepoSelection // omitted for brevity, see the source of this page
    });
</script>